AWSTemplateFormatVersion: '2010-09-09'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Cognito User for Kinesis Data Generator
        Parameters:
          - Username
          - Password

Resources:

  KDSGeneratorSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: KDSGeneratorSecret
      Description: This secret is for KDSGenerator
#      SecretString: '{"username":"awsuser","password":"Awsuser123"}'
      GenerateSecretString:
        SecretStringTemplate: '{"username": "awsuser"}'
        GenerateStringKey: password
        ExcludePunctuation: true
        includeSpace: false

  # Congito Resource
  DataGenCognitoSetupLambdaFunc:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Join
          - ''
          - - aws-kdg-tools-
            - !Ref 'AWS::Region'
        S3Key: datagen-cognito-setup.zip
      Description: >-
        Creates a Cognito User Pool, Identity Pool, and a User.  Returns IDs to
        be used in the Kinesis Data Generator.
      FunctionName: KinesisDataGeneratorCognitoSetup
      Handler: createCognitoPool.createPoolAndUser
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
      Runtime: nodejs18.x
      Timeout: 60
  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource:
                  - >-
                    arn:aws:logs:*:*:log-group:/aws/lambda/KinesisDataGeneratorCognitoSetup*
              - Effect: Allow
                Action:
                  - 'cognito-idp:AdminConfirmSignUp'
                  - 'cognito-idp:CreateUserPoolClient'
                  - 'cognito-idp:AdminCreateUser'
                Resource:
                  - 'arn:aws:cognito-idp:*:*:userpool/*'
              - Effect: Allow
                Action:
                  - 'cognito-idp:CreateUserPool'
                  - 'cognito-identity:CreateIdentityPool'
                  - 'cognito-identity:SetIdentityPoolRoles'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:UpdateAssumeRolePolicy'
                Resource:
                  - !GetAtt
                    - AuthenticatedUserRole
                    - Arn
                  - !GetAtt
                    - UnauthenticatedUserRole
                    - Arn
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !GetAtt
                    - AuthenticatedUserRole
                    - Arn
                  - !GetAtt
                    - UnauthenticatedUserRole
                    - Arn
  SetupCognitoCustom:
    Type: 'Custom::DataGenCognitoSetupLambdaFunc'
    Properties:
      ServiceToken: !GetAtt
        - DataGenCognitoSetupLambdaFunc
        - Arn
      Region: !Ref 'AWS::Region'
      Username: 'awsuser'
      #!Ref Username
      Password: '{{resolve:secretsmanager:KDSGeneratorSecret:SecretString:password}}'
      #!Ref Password
      AuthRoleName: !Ref AuthenticatedUserRole
      AuthRoleArn: !GetAtt
        - AuthenticatedUserRole
        - Arn
      UnauthRoleName: !Ref UnauthenticatedUserRole
      UnauthRoleArn: !GetAtt
        - UnauthenticatedUserRole
        - Arn
    DependsOn: [ KDSGeneratorSecret ]
  AuthenticatedUserRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - cognito-identity.amazonaws.com
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'kinesis:DescribeStream'
                  - 'kinesis:PutRecord'
                  - 'kinesis:PutRecords'
                Resource:
                  - 'arn:aws:kinesis:*:*:stream/*'
                Effect: Allow
              - Action:
                  - 'firehose:DescribeDeliveryStream'
                  - 'firehose:PutRecord'
                  - 'firehose:PutRecordBatch'
                Resource:
                  - 'arn:aws:firehose:*:*:deliverystream/*'
                Effect: Allow
              - Action:
                  - 'ec2:DescribeRegions'
                  - 'firehose:ListDeliveryStreams'
                  - 'kinesis:ListStreams'
                Resource:
                  - '*'
                Effect: Allow
  UnauthenticatedUserRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - cognito-identity.amazonaws.com
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Deny
                Action:
                  - '*'
                Resource:
                  - '*'

Outputs:
  KinesisDataGeneratorUrl:
    Description: The URL for your Kinesis Data Generator.
    Value: !Join
      - ''
      - - >-
          https://awslabs.github.io/amazon-kinesis-data-generator/web/producer.html?
        - !GetAtt
          - SetupCognitoCustom
          - Querystring